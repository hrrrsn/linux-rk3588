name: Build Kernel
run-name: Build Linux Kernel for Rockchip RK3588

on:
  workflow_dispatch:
    inputs:
      kernelVersion:
        description: 'Kernel Versions (JSON array ["6.6", "6.7"])'
        required: true
        default: ''

jobs:
  build:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        kernel: ${{ fromJson(github.event.inputs.kernelVersion) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        shell: bash
        run: |
          if [ $(uname -m) = "x86_64" ]; then
            sudo dpkg --add-architecture arm64
            sudo apt-get update
            sudo apt-get install qemu-user-static crossbuild-essential-arm64 \
            zlib1g-dev:arm64 uuid-dev:arm64 libblkid-dev:arm64 libssl-dev:arm64 \
            libelf-dev:arm64 uuid-dev:arm64 libudev-dev:arm64 -y
          fi

          sudo apt-get install gcc make libncurses-dev bison flex libssl-dev \
            fakeroot bc autoconf automake libtool build-essential debhelper \
            gcc make libncurses-dev bison flex libssl-dev fakeroot bc autoconf \
            automake libtool build-essential debhelper zlib1g-dev uuid-dev \
            libblkid-dev build-essential gcc-aarch64-linux-gnu bison \
            qemu-user-static qemu-system-arm qemu-efi \
            binfmt-support debootstrap flex libssl-dev bc rsync kmod cpio \
            xz-utils fakeroot parted udev dosfstools uuid-runtime git-lfs \
            device-tree-compiler bc debhelper libelf-dev pkg-config \
            zlib1g-dev uuid-dev libblkid-dev git -y

      - name: Build ${{ matrix.kernel }}
        shell: bash
        run: sudo ./build.sh ${{ matrix.kernel }}

      - name: Upload server image
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.kernel }}
          path: ${{ runner.workspace }}/build/*${{ matrix.kernel }}*.deb
          if-no-files-found: error
          retention-days: 30

      - name: Clean artifacts
        shell: bash
        run: sudo rm ${{ runner.workspace }}/build/*${{ matrix.kernel }}*.deb
